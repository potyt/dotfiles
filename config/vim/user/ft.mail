" config options
set tw=72
set formatoptions=tcqlwan1
set comments+=n:\|
set comments+=n:%
set comments+=n:>

" only load once
if exists("g:loaded_Mail_Sig_set_vim") | finish | endif
let g:loaded_Mail_Sig_set_vim = 1

" match a new line (\n) followed by the double dashed alone on a line or
" match the last line (\%: line ; $:last) the {offset} of '+0' permit to
" match the end of the new line or the very end of the file.
onoremap -- /\n^-- \=$\\|\%$/+0<cr>

" create command
command! -nargs=0 EraseSignature :call <sid>Erase_Sig()

" erase any reply signatures
function! s:Erase_Sig()
  normal G
  " position of our signature if automatically inserted by our MUA
  let s = search('^-- $', 'b')
  let s = (s!=0) ? s : line('$')+1
  " position of a signature from the replied email
  let i = s:SearchSignatureOnce( s-1, s )
  " call confirm('i='.i."  -- s=".s, '&Ok')
  " If found, then
  if i != 0
    " Try to see if an automatic signature from a mailing list has been
    " inserted
    let j = s:SearchSignatureOnce(i-1, s)
    if j != 0 | let i = j | endif
    " Finally, delete these lines plus the signature
    exe 'normal '.i.'Gd'.(s-1).'G'
  endif
endfunction

" search for reply signatures
function! s:SearchSignatureOnce(l, pos_self_sig)
  " Search for the signature pattern : "^> -- $"
  exe a:l
  let i = search('^> *-- \=$', 'b')
  " If found, then
  if i != 0
    " 0- check that nothing before
    let j = search('^[^>]', 'W') 
    " call confirm('j='.j."  -- i=".i, '&Ok')
    if (j != 0) && (j<a:pos_self_sig) | return 0 | endif 

    " First, search for the last non empty (non sig) line
    while i >= 1
      let i = i - 1
      " rem : i can't value 1
      if getline(i) !~ '^\(>\s*\)*$'
        break
      endif
    endwhile
    " Second, delete these lines plus the signature
    let i = i + 1
  endif
  return i
endfunction
